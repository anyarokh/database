import pymorphy3

morph = pymorphy3.MorphAnalyzer(lang='uk')

replace_dict = {'á': 'а', 'и́': 'и', 'ю́': 'ю', 'я́': 'я', 'е́': 'е', 'í': 'і', 'о́': 'о', 'є́': 'є', 'ї́': 'ї', 'ý': 'у'}

split_word_rules = {
    'на/кри/тт/я́': "Морфонологічного пояснення немає.; чергування приголосних [т'т'] - [т'] у кореневій морфонемі в родовому відмінку множини іменника середнього роду ІІ відміни.",
    'грабл/í': "Морфонологічного пояснення немає.; чергування нуля звука з [е] у кореневій морфонемі в родовому відмінку множинного іменника.",
    'ви́/рос/ти': "Морфонологічного пояснення немає.; чергування голосних [о] - [і] у кореневій морфонемі при утворенні дієслівної форми минулого часу чоловічого роду.",
    ('об/чи́сл/юва/ч', 'за/пи́л/юва/ч'): "Морфонологічного пояснення немає.; накладання на межі ‘суфікс ↔ суфікс’ у процесі творення іменника за допомогою суфікса -ач у похідній основі на -ва-.",
    ('бу/я́/нн/я', 'ка/я/тт/я́'): 'розшифрування морфеми я, що може вказувати на родовий відмінок слова.',
    ('ви́/го/єнн/я', 'гно́/єнн/я'): 'розшифрування морфеми є, що може вказувати на родовий відмінок слова.',
    ('бубон', 'віхоть'): 'чергування [о] з нулем звука у кореневій морфонемі в родовому відмінку однини іменника чоловічого роду ІІ відміни.',
    'пів/доро́г/а': 'чергування голосних [о] - [і] у кореневій морфонемі перед нульовим закінченням в родовому відмінку множини іменника жіночого роду І відміни.',
    ('стýд/інь', 'те́м/інь', 'че́рв/інь'): 'чергування голосних [і] - [е] у суфіксальній морфонемі перед суфіксом -ен- в місцевому відмінку однини іменника жіночого роду ІІІ відміни.',
    ('стýд/інь', 'те́м/інь'): "чергування голосних [н'] - [н'н'] у суфіксальній морфонемі в орудному відмінку однини іменника жіночого роду ІІІ відміни.",
    ('ви́/твір', 'гáмір', 'говір', 'з/го́вір', 'о́/пір', 'о́/твір', 'тáбір', 'ý/твір'): "чергування голосних [і] - [о] у кореневій морфонемі у родовому й давальному відмінках однини іменника чоловічого роду II відміни.",
    'гн/á/ти': "чергування приголосних [г] – [ж] в нетиповій початковій позиції кореня дієслова при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни, що свідчить, на думку окремих лінгвістів, про їхню омонімію (В. Касевич) або суплетивізм (П. Кузнецов)",
    'фур/к/от/á/ти': 'чергування [т] із [ч] у суфіксальній морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.',
    'плáк/а/ти': 'чергування [к] із [ч] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.',
    ('за/сип/á/ти', 'у/сип/á/ти', 'мá/ти'): 'усічення дієслівного суфікса в теперішньому часі дієслова недоконаного виду першої особи однини І дієвідміни і поява особового закінчення, яке додається до основи інфінітива.',
    ('ви́/пас/ти', 'на/пáс/ти', 'ви́с/і/ти', 'в/пáс/ти', 'у/пас/ти́', 'про/пáс/ти', 'під/пáс/ти'): 'усічення дієслівного суфікса -ти- при творенні дієслівної форми доконаного виду майбутнього часу першої особи однини за допомогою особового закінчення, яке додається до основи інфінітива.',
    ('в/сип/á/ти', 'над/сип/á/ти'): 'усічення дієслівного суфікса -ти- при творенні дієслівної форми недоконаного виду І дієвідміни теперішнього часу першої особи однини за допомогою особового закінчення, яке додається до основи інфінітива.',
    'пере/пáс/ти': 'усічення кореневої фонеми с – # при творенні дієслівної форми доконаного виду третьої особи однини майбутнього часу.',
    ('ви́/би/ти', 'по/би́/ти', 'від/би́/ти', 'до/би́/ти', 'з/би́/ти', 'на/би́/ти', 'над/би́/ти', 'обб/би́/ти', 'пере/би́/ти', 'під/би́/ти', 'попо/би́/ти', 'про/би́/ти', 'роз/би́/ти', 'у/би́/ти', 'за/би́/ти'): 'чергування [б] із [бй] у кореневій морфонемі при творенні дієслівної форми доконаного виду майбутнього часу першої особи однини.',
    ('над/пи́/ти', 'не/до/пи́/ти', 'по/пи́/ти', 'пи́/ти'): 'чергування [п] із [пй] у кореневій морфонемі при творенні дієслівної форми доконаного виду майбутнього часу першої особи однини.',
    ('об/ви́/ти', 'під/ви́/ти', 'по/ви́/ти', 'роз/ви́/ти', 'у/ви́/ти', 'пере/по/ви́/ти', 'з/ви́/ти'): 'чергування [в] із [вй] у кореневій морфонемі при творенні дієслівної форми доконаного виду майбутнього часу першої особи однини.',
    'вітер': 'чергування [е] з нулем звука у кореневій морфонемі в родовому, давальному та місцевому відмінках однини іменника чоловічого роду ІІ відміни.',
    ('пíв/день', 'бе́резень', 'рубе́ль', 'щабе́ль'): 'чергування [е] з нулем звука у кореневій морфонемі в родовому відмінку однини іменника чоловічого роду ІІ відміни.',
    ('кáшель', 'щаве́ль'): 'чергування [е] з нулем звука у кореневій морфонемі в родовому, давальному, місцевому й кличному відмінках однини іменника чоловічого роду ІІ відміни.',
    ("о́/повз/ень", "зá/зуб/ень"): 'чергування [е] з нулем звука у суфіксальній морфонемі в родовому відмінку однини іменника чоловічого роду ІІ відміни.',
    ("в'я́зень", "блазень", "ти́ждень", "корабе́ль"): 'чергування [е] з нулем звука у кореневій морфонемі в родовому та знахідному відмінках однини іменника чоловічого роду ІІ відміни.',
    "о́б/лиз/ень": 'чергування [е] з нулем звука у суфіксальній морфонемі в родовому та знахідному відмінках однини іменника чоловічого роду ІІ відміни.',
    "ви́/мер/ти": 'чергування [е] з нулем звука у кореневій морфонемі при утворенні дієслова доконаного виду в майбутньому часі третьої особи однини.',
    ("вес/ти́", "на/пá/сти"): 'усічення фонеми -с- при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.',
    "по/те́р/ти": 'чергування [е] з нулем звука у кореневій морфонемі при творенні дієслівної форми доконаного виду в майбутньому часі першої особи однини.',
    ("роз/си́д/і/ти/ся", "студ/и́/ти", "ю́д/и/ти"): 'чергування [д] із [дж] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.',
    ('на/коп/и́/ти', 'розі/сп/á/ти/ся'): 'чергування [п] із [пл] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.',
    ('на/коп/и́/ти', 'розі/сп/á/ти/ся'): 'чергування [п] із [пл] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.',
    'роз/шум/í/ти/ся': 'чергування [м] із [мл] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.',
    ('пере/снаст/и́/ти', 'с/товст/и́/ти'): 'чергування [ст] із [щ] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.',
    ('част/и́/ти', 'маст/и́/ти'): 'чергування [ст] із [щ] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.',
    'кáхель': 'чергування [е] з нулем звука у кореневій морфонемі однини іменника чоловічого роду ІІ відміни.',
    'кýхоль': 'чергування [о] з нулем звука у кореневій морфонемі в родовому та знахідному відмінках однини іменника чоловічого роду ІІ відміни.',
    "м'я́/ти": 'чергування [а] із [н] в кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.',
    ("пере/п'я/с/ти́", "при/п'я/с/ти́", "роз/п'я/с/ти́"): 'чергування [а] із [н] в кореневій морфонемі при творенні дієслівної форми доконаного виду майбутнього часу першої особи однини.',
    'ви́/пас/ти': 'усічення дієслівного суфікса -ти- при творенні дієслівної форми майбутнього часу другої особи однини за допомогою особового закінчення, яке додається до основи інфінітива.',
    'доро́г/а': 'чергування [о] з нулем звука в родовому, давальному та кличному відмінках однини іменника ІІ відміни.',

}

suffix_rules = [
    (['áлл/я', 'íлл/я', 'е́лл/я', 'и́лл/я'], "чергування приголосних [л'л'] - [л'] в родовому відмінку множини іменника середнього роду ІІ відміни."),
    (['он', 'óн'], "чергування [о] з нулем звука в родовому, давальному та кличному відмінках однини іменника ІІ відміни."),
    (['/ýх/а', '/áх/а', '/ю́х/а', '/и́х/а'], "чергування приголосних [х] - [с] перед [і] у суфіксальній морфонемі в давальному та місцевому відмінках однини іменника жіночого роду І відміни."),
    (['иха'], 'чергування приголосних [х] - [с] перед [і] у суфіксальній морфонемі в давальному та місцевому відмінках однини іменника жіночого роду І відміни.'),
    (['г/а', 'га', 'г/á'], 'чергування приголосних [г] - [з] перед [і] у кореневій морфонемі в давальному та місцевому відмінках однини іменника жіночого роду І відміни.'),
    (['ч/к/о', 'ечо́к'], 'чергування нуля звука з [о] у суфіксальній морфонемі в родовому відмінку множини іменника середнього роду ІІ відміни.'),
    (['т/к/и', 'оч/к/и', 'оньк/и́'], 'чергування нуля звука з [о] у суфіксальній морфонемі в родовому та знахідному відмінках множини іменника.'),
    (['ч/к/и́'], 'чергування нуля звука з [о] у суфіксальній морфонемі в родовому відмінку множини іменника жіночого роду І відміни.'),
    (['нес/ти́', 'нес/ти'], "чергування голосних [е] - [і] у кореневій морфонемі при утворенні дієслівної форми минулого часу чоловічого роду."),
    (['/ик/а', '/ік/а', '/íк/а', '/юк/а', '/як/а', '/и́к/а', '/ю́к/а', '/я́к/а'], "чергування приголосних [к] - [ц] перед [і] у суфіксальній морфонемі в давальному і місцевому відмінках однини іменника жіночого роду І відміни."),
    (['і/ти́'], "усічення дієслівного суфікса -ти- при творенні дієслівної форми недоконаного виду І дієвідміни теперішнього часу першої особи однини за допомогою особового закінчення, яке додається до основи інфінітива."),
    (['тт/я', 'тт/я́'], "чергування приголосних [т'т'] - [т'] у кореневій морфонемі в родовому відмінку множини іменника середнього роду ІІ відміни."),
    (['з/ень'], "чергування [е] з нулем звука у суфіксальній морфонемі в родовому відмінку однини іменника чоловічого роду ІІ відміни."),
]

basic_word_endings_rules = [
    (['зитися', 'зити', 'зати', 'затися'], 'чергування [з] із [ж] у кореневій морфонемі при творенні дієслівної форми'),
    (['гнати'], 'чергування приголосних [г] – [ж] в нетиповій початковій позиції кореня дієслова при творенні дієслівної форми'),
    (["гти", "гтися", "гати", "гнати"], 'чергування [г] із [ж] у кореневій морфонемі при творенні дієслівної форми'),
    (['скати'], 'чергування [ск] із [щ] у кореневій морфонемі при творенні дієслівної форми'),
    (["кти", "кати", "ктися", "катися"], 'чергування [к] із [ч] у кореневій морфонемі при творенні дієслівної форми'),
    (["стити", "стати", "ститися", "стіти"], 'чергування [ст] із [щ] у кореневій морфонемі при творенні дієслівної форми'),
    (["тіти", "тити", "тати", "титися", "татися", "тітися"], 'чергування [т] із [ч] у кореневій морфонемі при творенні дієслівної форми'),
    (["їхати"], 'усічення суфіксальної фонеми -а- при утворенні дієслівної форми'),
    (["хати", "хатися"], 'чергування [х] із [ш] у кореневій морфонемі при творенні дієслівної форми'),
    (["здити"], 'чергування [зд] із [ждж] у кореневій морфонемі при творенні дієслівної форми'),
    (["дити", "діти", "дитися", "дітися"], 'чергування [д] із [дж] у кореневій морфонемі при творенні дієслівної форми'),
    (["мити", "митися", "міти"], 'чергування [м] із [мл] у кореневій морфонемі при творенні дієслівної форми'),
    (["пити", "пати", "піти", "патися", "питися", "пітися"], 'чергування [п] із [пл] у кореневій морфонемі при творенні дієслівної форми'),
    (["фити"], 'чергування [ф] із [фл] у кореневій морфонемі при творенні дієслівної форми'),
    (["роти", "ротися"], "чергування [р] із [р'] у кореневій морфонемі при творенні дієслівної форми"),
    (["м'яти", "п'яти", "чати", "тяти", "п'ясти"], "чергування [а] із [н] в кореневій морфонемі при творенні дієслівної форми"),
    (["рати", "ратися"], "чергування нуля звука з [е] у кореневій морфонемі при творенні дієслівної форми"),
    (["няти", "жати"], "чергування [а] із [м] в кореневій морфонемі при творенні дієслівної форми"),
    (["мерти", "перти", "терти"], "чергування [е] з нулем звука у кореневій морфонемі при творенні дієслівної форми"),
    (["молоти", "полоти"], "чергування [о] із [е] у кореневій морфонемі при творенні дієслівної форми"),
]


def remove_stress_marks(word):
    for stressed, unstressed in replace_dict.items():
        word = word.replace(stressed, unstressed)
    return word


def match_suffix(word, suffixes):
    return any(word.endswith(suffix) for suffix in suffixes)


def matches_suffix_with_exceptions(word, suffixes, exceptions, lengths):
    return (
        any(word[-length:] in suffixes for length in lengths) and word not in exceptions
    )


def generate_explanation(split_word, basic_word):
    explanation_parts = []

    must_check_if_not_explanation_parts_split_word = {
        'бубон', 'віхоть', 'он', 'óн', 'тт/я', 'тт/я́', 'з/ень', 'кýхоль'
    }

    must_check_if_not_explanation_parts_basic_word = {
        "гти", "гтися", "гати", "гнати", "кти", "кати", "ктися", "катися",
        "стити", "стати", "ститися", "стіти", "тіти", "тити", "татися", "тітися",
        "хати", "хатися", "дити", "діти", "дитися", "дітися", "мити", "митися", "міти",
        "пити", "пати", "піти", "питися", "пітися", "роти", "ротися",
        "м'яти", "п'яти", "чати", "тяти", "п'ясти", "мерти", "перти", "терти"
    }

    # --- Перевірка split_word за точними правилами ---
    for keys, explanation in split_word_rules.items():
        if isinstance(keys, tuple) and split_word in keys:
            if split_word in must_check_if_not_explanation_parts_split_word:
                if not explanation_parts:
                    explanation_parts.append(explanation)
            else:
                explanation_parts.append(explanation)
            break
        elif isinstance(keys, str) and split_word == keys:
            if split_word in must_check_if_not_explanation_parts_split_word:
                if not explanation_parts:
                    explanation_parts.append(explanation)
            else:
                explanation_parts.append(explanation)
            break

    # --- Перевірка split_word за суфіксами ---
    if not explanation_parts:
        for suffixes, explanation in suffix_rules:
            if any(split_word.endswith(suffix) for suffix in suffixes):
                explanation_parts.append(explanation)
                break

    # --- Спеціальна перевірка на енн/я ---
    if not explanation_parts and matches_suffix_with_exceptions(
        split_word,
        {'енн/я', 'éнн/я', 'íнн/я', 'єнн/я', 'áнн/я', 'á/ння', 'а/нн/я', 'о́нн/я', 'á/нн/я', 'í/нн/я', 'я́/нн/я', 'а/нн/я́', 'á/нн/я́'},
        {'ма/я́ч/енн/я', 'від/сто́/юва/нн/я', 'по/бо́/юва/нн/я', 'о/збро́/єнн/я', 'по/шко́дж/енн/я'},
        [5, 6, 7]
    ):
        explanation_parts.append("чергування приголосних [н'н'] - [н'] в родовому відмінку множини іменника середнього роду ІІ відміни.")

    # --- Аналіз за basic_word (морфологічний розбір) ---
    if not explanation_parts:
        parsed_word = morph.parse(basic_word)[0]

        # Спеціальна обробка для окремих груп дієслів
        if basic_word.endswith(("сити", "сати", "ситися", "сіти", "слати")) and not basic_word.endswith(("увити", "кашель")):
            if 'impf' in parsed_word.tag:
                form_3pl = parsed_word.inflect({'plur', '3per'})
                if form_3pl and form_3pl.word and form_3pl.word.endswith(('уть', 'ють')):
                    explanation_parts.append('чергування [с] із [ш] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.')
                else:
                    explanation_parts.append('чергування [с] із [ш] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.')
            elif 'perf' in parsed_word.tag:
                explanation_parts.append('чергування [с] із [ш] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.')

        if basic_word.endswith(("вити", "витися")) and not basic_word.endswith(("вивити", "увити")):
            if 'impf' in parsed_word.tag:
                form_3pl = parsed_word.inflect({'plur', '3per'})
                if form_3pl and form_3pl.word and form_3pl.word.endswith(('уть', 'ють')):
                    explanation_parts.append('чергування [в] із [вл] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.')
                else:
                    explanation_parts.append('чергування [в] із [вл] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.')
            elif 'perf' in parsed_word.tag:
                explanation_parts.append('чергування [в] із [вл] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.')

        if (basic_word.endswith(("бити", "битися", "біти")) or split_word in {"о/здо́б/и/ти", "с/подоб/и́/ти"} and not basic_word.endswith(("вибити", "перебити", "побити", "відбити", "добити"))):
            if 'impf' in parsed_word.tag:
                form_3pl = parsed_word.inflect({'plur', '3per'})
                if form_3pl and form_3pl.word and form_3pl.word.endswith(('уть', 'ють')):
                    explanation_parts.append('чергування [б] із [бл] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.')
                else:
                    explanation_parts.append('чергування [б] із [бл] у кореневій морфонемі при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.')
            elif 'perf' in parsed_word.tag:
                explanation_parts.append('чергування [б] із [бл] у кореневій морфонемі при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.')

        if basic_word.endswith(("сти", "стися")) and not basic_word.endswith("рости"):
            if 'impf' in parsed_word.tag:
                form_3pl = parsed_word.inflect({'plur', '3per'})
                if form_3pl and form_3pl.word and form_3pl.word.endswith(('уть', 'ють')):
                    explanation_parts.append('усічення фонеми -с- при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини І дієвідміни.')
                else:
                    explanation_parts.append('усічення фонеми -с- при творенні дієслівної форми недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.')
            elif 'perf' in parsed_word.tag:
                explanation_parts.append('усічення фонеми -с- при творенні дієслівної форми доконаного виду першої особи однини майбутнього часу.')

        if not explanation_parts:
            for endings, explanation in basic_word_endings_rules:
                if match_suffix(basic_word, endings):
                    needs_check = any(basic_word.endswith(suffix) for suffix in must_check_if_not_explanation_parts_basic_word)
                    if needs_check:
                        if not explanation_parts:
                            if 'impf' in parsed_word.tag:
                                form_3pl = parsed_word.inflect({'plur', '3per'})
                                if form_3pl and form_3pl.word.endswith(('уть', 'ють')):
                                    explanation_parts.append(explanation + ' недоконаного виду теперішнього часу першої особи однини І дієвідміни.')
                                else:
                                    explanation_parts.append(explanation + ' недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.')
                            elif 'perf' in parsed_word.tag:
                                explanation_parts.append(explanation + ' доконаного виду першої особи однини майбутнього часу.')
                    else:
                        if 'impf' in parsed_word.tag:
                            form_3pl = parsed_word.inflect({'plur', '3per'})
                            if form_3pl and form_3pl.word.endswith(('уть', 'ють')):
                                explanation_parts.append(explanation + ' недоконаного виду теперішнього часу першої особи однини І дієвідміни.')
                            else:
                                explanation_parts.append(explanation + ' недоконаного виду теперішнього часу першої особи однини ІІ дієвідміни.')
                        elif 'perf' in parsed_word.tag:
                            explanation_parts.append(explanation + ' доконаного виду першої особи однини майбутнього часу.')
                    break

    return '; '.join(explanation_parts)
